{"version":3,"sources":["webpack://gatsby-starter-hello-world/./src/template/blog-template.js"],"names":["Template","data","pageContext","post","markdownRemark","previous","next","console","log","className","title","frontmatter","date","amountOfCoffees","i","timeToRead","cupsOfCoffee","href","src","cover","alt","target","rel","imageCredit","dangerouslySetInnerHTML","__html","html","to","fields","slug","previousLink","activeClassName","nextLink"],"mappings":"kNAGe,SAASA,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YACjCC,EAAOF,EAAKG,eACVC,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KAoBlB,OADAC,QAAQC,IAAIN,GAEV,2BAASO,UAAU,aACjB,0BAAQA,UAAU,oBAChB,sBAAIA,UAAU,SAASN,EAAKO,OAC5B,uBAAKD,UAAU,QACb,wBAAMA,UAAU,QAAQN,EAAKQ,YAAYC,MACzC,wBAAMH,UAAU,QAzBH,SAACN,GAEpB,IADA,IAAIU,EAAkB,GACbC,EAAI,EAAGA,EAAIX,EAAKY,WAAYD,IACnCD,GAAmB,KAErB,OAAOA,EAoBuBG,CAAab,GAArC,gBAIJ,uBAAKM,UAAU,kBACb,0BAAQA,UAAU,eAChB,qBAAGQ,KAAK,0CACN,uBACER,UAAU,YACVS,IAAKf,EAAKQ,YAAYQ,MACtBC,IAAI,gBAGR,8BAAYX,UAAU,kCAAtB,gBAEE,qBAAGQ,KAAK,wBAAwBI,OAAO,SAASC,IAAI,cACjDnB,EAAKQ,YAAYY,eAIxB,uBACEd,UAAU,YACVe,wBAAyB,CAAEC,OAAQtB,EAAKuB,SAG5C,uBAAKjB,UAAU,mCACZP,EAAYG,UACX,gBAAC,KAAD,CACEsB,GA9CW,WACnB,GAAItB,EACF,OAAOA,EAASuB,OAAOC,KA4CbC,GACJC,gBAAgB,SAChBtB,UAAU,gDAHZ,WAME,qBAAGA,UAAU,2CAIhBP,EAAYI,MACX,gBAAC,KAAD,CACEG,UAAU,gDACVkB,GArDO,WACf,GAAIrB,EACF,OAAOA,EAAKsB,OAAOC,KAmDTG,IAFN,OAIM,qBAAGvB,UAAU","file":"component---src-template-blog-template-js-e9e0768cf6fc74d613e8.js","sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\n\nexport default function Template({ data, pageContext }) {\n  const post = data.markdownRemark;\n  const { previous, next } = pageContext;\n  const cupsOfCoffee = (post) => {\n    let amountOfCoffees = \"\";\n    for (let i = 0; i < post.timeToRead; i++) {\n      amountOfCoffees += \"â˜• \";\n    }\n    return amountOfCoffees;\n  };\n  const previousLink = () => {\n    if (previous) {\n      return previous.fields.slug;\n    }\n  };\n  const nextLink = () => {\n    if (next) {\n      return next.fields.slug;\n    }\n  };\n\n  console.log(pageContext);\n  return (\n    <article className=\"blog-post\">\n      <header className=\"blog-post-header\">\n        <h2 className=\"title\">{post.title}</h2>\n        <div className=\"meta\">\n          <span className=\"date\">{post.frontmatter.date}</span>\n          <span className=\"time\">{cupsOfCoffee(post)} min read </span>\n        </div>\n      </header>\n\n      <div className=\"blog-post-body\">\n        <figure className=\"blog-banner\">\n          <a href=\"https://github.com/danielphilipjohnson\">\n            <img\n              className=\"img-fluid\"\n              src={post.frontmatter.cover}\n              alt=\"blog cover\"\n            />\n          </a>\n          <figcaption className=\"mt-2 text-center image-caption\">\n            Image Credit:\n            <a href=\"https://unsplash.com/\" target=\"_blank\" rel=\"noreferrer\">\n              {post.frontmatter.imageCredit}\n            </a>\n          </figcaption>\n        </figure>\n        <div\n          className=\"container\"\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        ></div>\n      </div>\n      <nav className=\"blog-nav nav nav-justified my-5\">\n        {pageContext.previous && (\n          <Link\n            to={previousLink()}\n            activeClassName=\"active\"\n            className=\"nav-link-prev nav-item nav-link rounded-left\"\n          >\n            Previous\n            <i className=\"arrow-prev fas fa-long-arrow-alt-left\"></i>\n          </Link>\n        )}\n\n        {pageContext.next && (\n          <Link\n            className=\"nav-link-next nav-item nav-link rounded-right\"\n            to={nextLink()}\n          >\n            Next<i className=\"arrow-next fas fa-long-arrow-alt-right\"></i>\n          </Link>\n        )}\n      </nav>\n    </article>\n  );\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      excerpt\n      id\n      timeToRead\n      html\n      frontmatter {\n        date\n        id\n        title\n        cover\n        imageCredit\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}